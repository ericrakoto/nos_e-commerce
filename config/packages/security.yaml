security:
    encoders:
        App\Entity\User:
            algorithm: argon2i

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        # in_database:
        #     entity:
        #         class: App\Entity\Mpividy
        #         property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # secured_area: #no authentification izy raha atao eto
            # ...
                # logout:
                #     path:   /logout
                #     target: /login


        main:
            anonymous: true
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
                    # - App\Controller\SecurityController
            # provider: in_database
            logout:
                path:   /logout
                target: /login
                
            form_login:
                default_target_path: accueil
                # login_path: secu_login
                # check_path: secu_login
            


            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/accueil, roles: ROLE_USER }
